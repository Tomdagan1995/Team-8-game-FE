{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nconst defaultDropTime = 1000;\nconst minimumDropTime = 100;\nconst speedIn = 50;\nexport const useDropTime = _ref => {\n  _s();\n  let {\n    gameStats\n  } = _ref;\n  const [droptime, setDropTime] = useState(defaultDropTime);\n  const [previousDropTime, setPreviousDropTime] = useState();\n  const resumeDropTime = useCallback(() => {\n    if (!previousDropTime) {\n      return;\n    }\n    setDropTime(previousDropTime);\n    setPreviousDropTime(null);\n  }, [previousDropTime]);\n  const pauseDropTime = useCallback(() => {\n    if (droptime) {\n      setPreviousDropTime(droptime);\n    }\n    setDropTime(null);\n  }, [droptime, setPreviousDropTime]);\n  useEffect(() => {\n    const speed = speedIncrement + (gameStats.level - 1);\n    const newDropTime = Math.max(defaultDropTime - speed, minimumDropTime);\n    setDropTime(newDropTime);\n  }, [gameStats.level, setDropTime]);\n  return [dropTime, pauseDropTime, resumeDropTime];\n};\n_s(useDropTime, \"UVRmGEX9mldbidjNQcxLPlRtY/E=\");","map":{"version":3,"names":["useCallback","useEffect","useState","defaultDropTime","minimumDropTime","speedIn","useDropTime","gameStats","droptime","setDropTime","previousDropTime","setPreviousDropTime","resumeDropTime","pauseDropTime","speed","speedIncrement","level","newDropTime","Math","max","dropTime"],"sources":["/Users/bignovik/Desktop/ITC Assignments/Team-8-game-FE/src/hooks/useDropTime.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nconst defaultDropTime = 1000;\nconst minimumDropTime = 100;\nconst speedIn = 50;\n\nexport const useDropTime = ({ gameStats }) => {\n  const [droptime, setDropTime] = useState(defaultDropTime);\n  const [previousDropTime, setPreviousDropTime] = useState();\n\n  const resumeDropTime = useCallback(() => {\n    if (!previousDropTime) {\n      return;\n    }\n    setDropTime(previousDropTime);\n    setPreviousDropTime(null);\n  }, [previousDropTime]);\n\n  const pauseDropTime = useCallback(() => {\n    if (droptime) {\n      setPreviousDropTime(droptime);\n    }\n    setDropTime(null);\n  }, [droptime, setPreviousDropTime]);\n\n  useEffect(() => {\n    const speed = speedIncrement + (gameStats.level - 1);\n    const newDropTime = Math.max(defaultDropTime - speed, minimumDropTime);\n\n    setDropTime(newDropTime);\n  }, [gameStats.level, setDropTime]);\n\n  return [dropTime, pauseDropTime, resumeDropTime];\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,eAAe,GAAG,GAAG;AAC3B,MAAMC,OAAO,GAAG,EAAE;AAElB,OAAO,MAAMC,WAAW,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACC,eAAe,CAAC;EACzD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,EAAE;EAE1D,MAAMU,cAAc,GAAGZ,WAAW,CAAC,MAAM;IACvC,IAAI,CAACU,gBAAgB,EAAE;MACrB;IACF;IACAD,WAAW,CAACC,gBAAgB,CAAC;IAC7BC,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACD,gBAAgB,CAAC,CAAC;EAEtB,MAAMG,aAAa,GAAGb,WAAW,CAAC,MAAM;IACtC,IAAIQ,QAAQ,EAAE;MACZG,mBAAmB,CAACH,QAAQ,CAAC;IAC/B;IACAC,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,CAACD,QAAQ,EAAEG,mBAAmB,CAAC,CAAC;EAEnCV,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,cAAc,IAAIR,SAAS,CAACS,KAAK,GAAG,CAAC,CAAC;IACpD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAChB,eAAe,GAAGW,KAAK,EAAEV,eAAe,CAAC;IAEtEK,WAAW,CAACQ,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACV,SAAS,CAACS,KAAK,EAAEP,WAAW,CAAC,CAAC;EAElC,OAAO,CAACW,QAAQ,EAAEP,aAAa,EAAED,cAAc,CAAC;AAClD,CAAC;AAAC,GA3BWN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}