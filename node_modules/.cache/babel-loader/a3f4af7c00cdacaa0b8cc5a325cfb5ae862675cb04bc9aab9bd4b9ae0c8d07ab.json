{"ast":null,"code":"var _jsxFileName = \"/Users/bignovik/Desktop/ITC Assignments/Team-8-game-FE/src/components/GameController.js\";\nimport \"./GameController.css\";\nimport { Action, actionForKey } from \"../business/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameController = _ref => {\n  let {\n    board,\n    gameStats,\n    player,\n    setGameOver,\n    setPlayer\n  } = _ref;\n  const onKeyUp = _ref2 => {\n    let {\n      code\n    } = _ref2;\n    const action = actionForKey(code);\n    if (action === Action.Quit) {\n      setGameOver(true);\n    }\n  };\n  const onKeyDown = _ref3 => {\n    let {\n      code\n    } = _ref3;\n    const action = actionForKey(code);\n    if (action === Action.Quit) {\n      setGameOver(true);\n    }\n  };\n  const handleInput = _ref4 => {\n    let {\n      code\n    } = _ref4;\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"GameController\",\n    type: \"text\",\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["Action","actionForKey","GameController","board","gameStats","player","setGameOver","setPlayer","onKeyUp","code","action","Quit","onKeyDown","handleInput","playerController"],"sources":["/Users/bignovik/Desktop/ITC Assignments/Team-8-game-FE/src/components/GameController.js"],"sourcesContent":["import \"./GameController.css\";\n\nimport { Action, actionForKey } from \"../business/Input\";\n\nconst GameController = ({ board, gameStats, player, setGameOver, setPlayer }) => {\n    const onKeyUp = ({ code }) => {\n        const action = actionForKey(code);\n        if (action === Action.Quit) {\n            setGameOver(true);\n        }\n    }\n\n    const onKeyDown = ({ code }) => {\n        const action = actionForKey(code);\n        if (action === Action.Quit) {\n            setGameOver(true);\n        }\n    }\n\n    const handleInput = ({ code }) => {\n        playerController({\n            action,\n            board,\n            player,\n            setPlayer\n        })\n    }\n\n    return (\n        <input \n        className=\"GameController\"\n        type=\"text\"\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        autoFocus\n        />\n    )\n};\n\n\nexport default GameController;\n"],"mappings":";AAAA,OAAO,sBAAsB;AAE7B,SAASA,MAAM,EAAEC,YAAY,QAAQ,mBAAmB;AAAC;AAEzD,MAAMC,cAAc,GAAG,QAA0D;EAAA,IAAzD;IAAEC,KAAK;IAAEC,SAAS;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAU,CAAC;EACxE,MAAMC,OAAO,GAAG,SAAc;IAAA,IAAb;MAAEC;IAAK,CAAC;IACrB,MAAMC,MAAM,GAAGT,YAAY,CAACQ,IAAI,CAAC;IACjC,IAAIC,MAAM,KAAKV,MAAM,CAACW,IAAI,EAAE;MACxBL,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ,CAAC;EAED,MAAMM,SAAS,GAAG,SAAc;IAAA,IAAb;MAAEH;IAAK,CAAC;IACvB,MAAMC,MAAM,GAAGT,YAAY,CAACQ,IAAI,CAAC;IACjC,IAAIC,MAAM,KAAKV,MAAM,CAACW,IAAI,EAAE;MACxBL,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ,CAAC;EAED,MAAMO,WAAW,GAAG,SAAc;IAAA,IAAb;MAAEJ;IAAK,CAAC;IACzBK,gBAAgB,CAAC;MACbJ,MAAM;MACNP,KAAK;MACLE,MAAM;MACNE;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACI;IACA,SAAS,EAAC,gBAAgB;IAC1B,IAAI,EAAC,MAAM;IACX,SAAS,EAAEK,SAAU;IACrB,OAAO,EAAEJ,OAAQ;IACjB,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV,CAAC;AAAC,KAjCIN,cAAc;AAoCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}