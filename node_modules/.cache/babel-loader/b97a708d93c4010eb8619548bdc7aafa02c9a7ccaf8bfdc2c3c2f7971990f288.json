{"ast":null,"code":"const className = \"tetromino\";\nexport const TETROMINOES = {\n  I: {\n    shape: [[0, 1, 0]]\n  }\n};\nexport const transferToBoard = _ref => {\n  let {\n    className,\n    isOccupied,\n    position,\n    rows,\n    shape\n  } = _ref;\n  shape.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell) {\n        const occupied = isOccupied;\n        const _y = _y + position.row;\n        const _x = _x + position.column;\n        rows[_y][_x] = {\n          occupied,\n          className\n        };\n      }\n    });\n  });\n  return rows;\n};","map":{"version":3,"names":["className","TETROMINOES","I","shape","transferToBoard","isOccupied","position","rows","forEach","row","y","cell","x","occupied","_y","_x","column"],"sources":["/Users/bignovik/Desktop/ITC Assignments/Team-8-game-FE/src/business/Tetrominoes.js"],"sourcesContent":["const className = \"tetromino\";\n\nexport const TETROMINOES = {\nI: {\n    shape: [\n        [0, 1, 0, ]\n    ]\n}\n}\n\n\nexport const transferToBoard = ({\n    className,\n    isOccupied,\n    position,\n    rows,\n    shape\n}) => {\n    shape.forEach((row, y) => {\n        row.forEach((cell, x) => {\n            if (cell) {\n                const occupied = isOccupied;\n                const _y = _y + position.row;\n                const _x = _x + position.column;\n                rows[_y][_x] = { occupied, className }\n            }\n        })\n    })\n    return rows;\n}"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAE7B,OAAO,MAAMC,WAAW,GAAG;EAC3BC,CAAC,EAAE;IACCC,KAAK,EAAE,CACH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG;EAEnB;AACA,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAG,QAMzB;EAAA,IAN0B;IAC5BJ,SAAS;IACTK,UAAU;IACVC,QAAQ;IACRC,IAAI;IACJJ;EACJ,CAAC;EACGA,KAAK,CAACK,OAAO,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IACtBD,GAAG,CAACD,OAAO,CAAC,CAACG,IAAI,EAAEC,CAAC,KAAK;MACrB,IAAID,IAAI,EAAE;QACN,MAAME,QAAQ,GAAGR,UAAU;QAC3B,MAAMS,EAAE,GAAGA,EAAE,GAAGR,QAAQ,CAACG,GAAG;QAC5B,MAAMM,EAAE,GAAGA,EAAE,GAAGT,QAAQ,CAACU,MAAM;QAC/BT,IAAI,CAACO,EAAE,CAAC,CAACC,EAAE,CAAC,GAAG;UAAEF,QAAQ;UAAEb;QAAU,CAAC;MAC1C;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}